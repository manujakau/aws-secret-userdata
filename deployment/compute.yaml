AWSTemplateFormatVersion: 2010-09-09
Parameters:
  EnvName:
    Description: Environment name tag
    Type: String
    Default: secretdemo

  EC2AccessCIDR:
    Description: Allowed CIDR block for external tcp access to the EC2
    Type: String
    Default: 0.0.0.0/0

  EC2KeyPairName: 
    Description: Amazon EC2 Key Pair
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: must be a valid Key Pair
    Default: "eks-key"


Resources:
  SeEC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /

  SeEC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref SeEC2Role

  SeEC2RolePolicies:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: SeEC2
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
      Roles:
        - !Ref SeEC2Role

  SeEC2sshSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub '${EnvName}-vpc-id'
      GroupDescription: Enable SSH access via port 22
      Tags:
        - Key: Name
          Value: ${EnvName}-SecurityGroup

  Ingress22:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref SeEC2sshSecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: !Ref EC2AccessCIDR

  Ingress5432:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref SeEC2sshSecurityGroup
      IpProtocol: tcp
      FromPort: '5432'
      ToPort: '5432'
      CidrIp: !Ref EC2AccessCIDR

  SeEC2:
    Type: AWS::EC2::Instance
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          Install:
            - "psqlconfig"
        psqlconfig: 
          packages: 
            yum:
              postgresql: []
              postgresql-server: []
              postgresql-devel: []
              postgresql-contrib: []
              postgresql-docs: []
              jq: []
    Properties: 
      ImageId: ami-09d3b3274b6c5d4aa
      InstanceType: t2.medium
      KeyName: !Ref EC2KeyPairName
      SubnetId: 
        Fn::ImportValue: !Sub '${EnvName}-public-subnet'
      SecurityGroupIds:
        - !Ref SeEC2sshSecurityGroup
      UserData: !Base64 
        'Fn::Sub':
          - >
            #!/bin/bash -x

            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource SeEC2
            --region ${AWS::Region} --configsets Install

            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource
            SeEC2 --region ${AWS::Region}

            sudo postgresql-setup initdb

            sudo systemctl restart postgresql.service

            sudo systemctl enable postgresql.service

            PSQLROOTPASSWORD=$(aws secretsmanager get-secret-value --secret-id psqlrootpassword02 --region ${AWS::Region} | 
            jq --raw-output '.SecretString')

            sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD '$PSQLROOTPASSWORD';"

            sudo sed -i 's/local   all             all                                     peer/
            local   all             all                                     md5/g' /var/lib/pgsql/data/pg_hba.conf

            sudo sh -c "echo 'host    all             all             0.0.0.0/0               md5' >> /var/lib/pgsql/data/pg_hba.conf"

            sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" /var/lib/pgsql/data/postgresql.conf

            sudo systemctl restart postgresql.service

          - {}
      IamInstanceProfile: !Ref SeEC2InstanceProfile
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-EC2


Outputs:
  SeEC2PublicIPAddress:
    Description: EC2 public IP
    Value: !GetAtt SeEC2.PublicIp
  SeSecurityGroup:
    Description: EC2 security Group ID
    Value: !Ref SeEC2sshSecurityGroup
    Export:
      Name: !Sub ${EnvName}-security-group