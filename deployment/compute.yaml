AWSTemplateFormatVersion: 2010-09-09
Parameters:
  EnvName:
    Description: Environment name tag
    Type: String
    Default: secretdemo

  EC2AccessCIDR:
    Description: Allowed CIDR block for external tcp access to the EC2
    Type: String
    Default: 0.0.0.0/0

  EC2KeyPairName: 
    Description: Amazon EC2 Key Pair
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: must be a valid Key Pair
    Default: "eks-key"


Resources:
  SeEC2sshSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub '${EnvName}-vpc-id'
      GroupDescription: Enable SSH access via port 22
      Tags:
        - Key: Name
          Value: ${EnvName}-SecurityGroup
  Ingress22:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref SeEC2sshSecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: !Ref EC2AccessCIDR
  Ingress5432:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref SeEC2sshSecurityGroup
      IpProtocol: tcp
      FromPort: '5432'
      ToPort: '5432'
      CidrIp: !Ref EC2AccessCIDR

  SeEC2:
    Type: AWS::EC2::Instance
    Metadata:
          'AWS::CloudFormation::Init':
            configSets:
              psql_install:
                - install_cfn
                - install_psql
            install_cfn:
              files:
                /etc/cfn/cfn-hup.conf:
                  content: !Join 
                    - ''
                    - - |
                        [main]
                      - stack=
                      - !Ref 'AWS::StackId'
                      - |+
                      - region=
                      - !Ref 'AWS::Region'
                      - |+
                  mode: '000400'
                  owner: root
                  group: root
                /etc/cfn/hooks.d/cfn-auto-reloader.conf:
                  content: !Join 
                    - ''
                    - - |
                        [cfn-auto-reloader-hook]
                      - |
                        triggers=post.update
                      - >
                        path=Resources.SeEC2.Metadata.AWS::CloudFormation::Init
                      - 'action=/opt/aws/bin/cfn-init -v '
                      - '         --stack '
                      - !Ref 'AWS::StackName'
                      - '         --resource SeEC2 '
                      - '         --configsets psql_install '
                      - '         --region '
                      - !Ref 'AWS::Region'
                      - |+
                  mode: '000400'
                  owner: root
                  group: root
              services:
                sysvinit:
                  cfn-hup:
                    enabled: 'true'
                    ensureRunning: 'true'
                    files:
                      - /etc/cfn/cfn-hup.conf
                      - /etc/cfn/hooks.d/cfn-auto-reloader.conf
            install_psql:
              packages:
                yum:
                  postgresql: []
                  postgresql-server: []
    Properties: 
      ImageId: ami-09d3b3274b6c5d4aa
      InstanceType: t2.medium
      KeyName: !Ref EC2KeyPairName
      SubnetId: 
        Fn::ImportValue: !Sub '${EnvName}-public-subnet'
      SecurityGroupIds:
        - !Ref SeEC2sshSecurityGroup
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource SeEC2 '
            - '         --configsets psql_install '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource SeEC2 '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+
      Tags:
        - Key: Name
          Value: ${EnvName}-EC2


Outputs:
  SeEC2PublicIPAddress:
    Description: EC2 public IP
    Value: !GetAtt SeEC2.PublicIp
  SeEC2SecurityGroup:
    Description: EC2 SSH security group
    Value: !Ref SeEC2sshSecurityGroup